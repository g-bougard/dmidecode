name: Build

on:
  push:
    paths:
      - '**.c'
      - '**.h'
      - 'Makefile'
      - '.github/workflows/build.yml'

jobs:

  mingw32-build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install build requirements
      run: |
        sudo apt -y install gcc-mingw-w64
    - name: Build dmidecode
      run: |
        if [ -z "${GITHUB_REF##*refs/tags/*}" ]; then
            VERSION="${GITHUB_REF#*refs/tags/}"
        else
            read A B V < version.h
            VERSION=$( echo $V | tr -d '"' )-git${GITHUB_SHA:0:8}
        fi
        sed -ri -e 's/VERSION.*/VERSION "'$VERSION'"/' version.h
        echo "VERSION: $VERSION"
        make
        make strip
        ls -l dmidecode.exe
        read SHA1 XXX <<<$(sha1sum dmidecode.exe)
        printf "%6s: %s\n" SHA1 $SHA1
        sha256sum dmidecode.exe >dmidecode.exe.sha256
        read SHA256 XXX < dmidecode.exe.sha256
        printf "%6s: %s\n" SHA256 $SHA256
      shell: bash
    - name: Upload built artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Dmidecode-Build
        path: |
          dmidecode.exe
          dmidecode.exe.sha256
    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: false
        body: |
          Stripped dmidecode binary to be included in GLPI Agent Windows MSI packages
        files: |
          dmidecode.exe
          dmidecode.exe.sha256

  windows-signing:

    runs-on: windows-latest

    needs: mingw32-build

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: Dmidecode-Build
    - name: Create dedicated folder
      run: |
        mkdir C:\CodeSign
      shell: cmd
    - name: MSI Signing
      run: |
        echo "$CODESIGN_KNOWNHOST"           >> ~/.ssh/known_host
        echo "$CODESIGN_PRIVATE"              > private.key
        cat dmidecode.exe | $CODESIGN_COMMAND > C:\CodeSign\dmidecode.exe
        sha256sum C:\CodeSign\dmidecode.exe   > C:\CodeSign\dmidecode.exe.sha256
        C:\CodeSign\dmidecode.exe --version
      shell: bash
      env:
        CODESIGN_KNOWNHOST: ${{ secrets.CODESIGN_KNOWNHOST }}
        CODESIGN_COMMAND: ${{ secrets.CODESIGN_COMMAND }}
        CODESIGN_PRIVATE: ${{ secrets.CODESIGN_PRIVATE }}
    - name: List generated files
      if: success() || failure()
      run: |
        dir C:\CodeSign
      shell: cmd
    - name: Upload artifacts
      if: success() || failure()
      uses: actions/upload-artifact@v2
      with:
        name: Dmidecode-Signed
        path: C:\CodeSign
